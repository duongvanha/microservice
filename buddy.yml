- pipeline: infra
  trigger_mode: ON_EVERY_PUSH
  ref_name: master
  ref_type: BRANCH
  trigger_condition: ALWAYS
  actions:
  - action: "terraform apply"
    type: "BUILD"
    working_directory: "/buddy/microservice/infra"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "18.04"
    execute_commands:
    - "echo 'credentials \"app.terraform.io\" {\ntoken = \"'$TOKEN_TERRAFORM_IO'\"\n}' > .terraformrc"
    - "openssl enc -in ../env/microservices.json.enc -out ../env/microservices.json -d -aes256 -pass pass:$PASWORD_CREDENTIAL_FILE"
    - "terraform init && terraform taint null_resource.dev-hosts && terraform apply --auto-approve"
    - "rm -rf ../env/microservices.json"
    - "rm -rf .terraformrc"
    setup_commands:
    - "apt-get update -q"
    - "apt-get install wget unzip -y -q"
    - "wget https://releases.hashicorp.com/terraform/0.12.6/terraform_0.12.6_linux_amd64.zip"
    - "unzip ./terraform_0.12.6_linux_amd64.zip -d /usr/local/bin/"
    - "terraform -v"
    mount_filesystem_path: "/buddy/microservice"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "ansible worker"
    type: "BUILD"
    working_directory: "/buddy/microservice/infra"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "18.04"
    execute_commands:
    - "export ANSIBLE_HOST_KEY_CHECKING=False"
    - "ansible-playbook -i hosts ansible/initial.yml"
    - "ansible-playbook -i hosts ansible/kube-dependencies.yml"
    - "ansible-playbook -i hosts ansible/master-node.yml"
    - "ansible-playbook -i hosts ansible/workers-node.yml"
    - "ssh $(terraform output ip_master)"
    - "curl -L https://git.io/get_helm.sh | bash"
    - "kubectl create -f tiller-rbac.yaml"
    - "helm init --service-account tiller --upgrade"
    setup_commands:
    - "apt-get update -q && apt-get install software-properties-common -y -q"
    - "apt-get update -q && apt-add-repository ppa:ansible/ansible -y"
    - "apt-get update -q && apt-get install ansible -y -q"
    - "ansible-playbook --version"
    mount_filesystem_path: "/buddy/microservice"
    shell: "BASH"
    trigger_condition: "ALWAYS"
- pipeline: node1
  trigger_mode: ON_EVERY_PUSH
  ref_name: master
  ref_type: BRANCH
  trigger_condition: ALWAYS
  actions:
  - action: Build Docker image
    type: DOCKERFILE
    login: ${DOCKER_USERNAME}
    password: secure!+xmZnhe6DEcEPAlSioiycjtiz7E4mFqLbzs1Td60gKI=
    disabled: false
    docker_image_tag: latest,${BUDDY_EXECUTION_REVISION}
    dockerfile_path: src/docker/node.dockerfile
    context_path: src/services/node1
    repository: blademaster996/node1
    trigger_condition: ALWAYS
- pipeline: simple
  trigger_mode: ON_EVERY_PUSH
  ref_name: master
  ref_type: BRANCH
  trigger_condition: ALWAYS
  actions:
  - action: Build Docker image
    type: DOCKERFILE
    login: ${DOCKER_USERNAME}
    password: secure!+xmZnhe6DEcEPAlSioiycjtiz7E4mFqLbzs1Td60gKI=
    disabled: false
    docker_image_tag: latest,${BUDDY_EXECUTION_REVISION}
    dockerfile_path: src/docker/go.dockerfile
    context_path: src/services/simple
    repository: blademaster996/simple
    trigger_condition: ALWAYS
- pipeline: simple2
  trigger_mode: ON_EVERY_PUSH
  ref_name: master
  ref_type: BRANCH
  trigger_condition: ALWAYS
  actions:
  - action: Build Docker image
    type: DOCKERFILE
    login: ${DOCKER_USERNAME}
    password: secure!+xmZnhe6DEcEPAlSioiycjtiz7E4mFqLbzs1Td60gKI=
    disabled: false
    docker_image_tag: latest,${BUDDY_EXECUTION_REVISION}
    dockerfile_path: src/docker/go.dockerfile
    context_path: src/services/simple2
    repository: blademaster996/simple2
    trigger_condition: ALWAYS
  dockerfile_path: src/docker/go.dockerfile
    context_path: src/services/simple2
    repository: blademaster996/simple2
    trigger_condition: ALWAYS
